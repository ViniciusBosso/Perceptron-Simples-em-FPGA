library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_SIGNED.ALL;

-- STD_LOGIC_VECTOR, significa que o elemento recebe uma valor binário em matriz com bits de (n downto 0) sendo n um número inteiro

entity pesos_entradas_internos is
    Port ( entrada1 : in   STD_LOGIC_VECTOR  (3 downto 0); --x1 (alavancas)
           entrada2 : in   STD_LOGIC_VECTOR  (3 downto 0); -- x2 (alavancas)
           booleano : out STD_LOGIC_VECTOR (6 downto 0); -- saida do potencial de ativação (0 ou 1,diplay)
           anodo    : out STD_LOGIC_VECTOR (3 downto 0); -- acender conjunto de filamentos do display
           saida    : out  STD_LOGIC_VECTOR  (7 downto 0)); -- potencial de ativação "u" (leds FPGA)	  
end pesos_entradas_internos;

architecture Behavioral of pesos_entradas_internos is
-- Sinais
	Shared Variable u:  STD_LOGIC_VECTOR (7 downto 0); -- saida (potencial de ativ)
	SIGNAL x1: STD_LOGIC_VECTOR (3 downto 0) := "0000"; -- sinal da porta entrada1
	SIGNAL x2: STD_LOGIC_VECTOR (3 downto 0) := "0000"; -- sinal da porta entrada2
	SIGNAL anodo_sinal: STD_LOGIC_VECTOR (3 downto 0) := "0111"; -- sinal da porta anodo
	SIGNAL y:  STD_LOGIC_VECTOR (6 downto 0) := "0000000"; -- sinal da porta booleano 
	
	begin
-- Entradas sendo passadas para respectivos sinais
		x1 <= entrada1;
		x2 <= entrada2;

	process (entrada1, entrada2)
-- Pesos que podem ser mudados internamente 
		Variable w1: STD_LOGIC_VECTOR (3 downto 0) := "1111" -- -1 em decimal (pois está com a biblioteca SIGNED "Complemento de 2")
		Variable w2: STD_LOGIC_VECTOR (3 downto 0) := "0001"; -- 1 em decimal
		
		begin
-- Cálculo do potencial de ativação
			u := (x1*w1) + (x2*w2);

-- Condicional para determinar a saída do neurônio "y"
			if u >= 0 then
				y <= "1001111"; -- Corresponde a 1 no display
			else
				y <= "0000001"; -- Corresponde a 0 no display
			end if;
	end process;
-- Sinais sendo passados para as portas de saída da entidade
	saida <= u; -- leds FPGA
	booleano <= y; -- display (filamentos ativos em "0" e desativados em "1")
	anodo <= anodo_sinal; --conjunto de filamentos (ativos em "0")
end Behavioral;
